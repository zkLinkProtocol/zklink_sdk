// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0.

// Section: imports

use super::*;
use crate::api::*;
use flutter_rust_bridge::for_generated::byteorder::{NativeEndian, ReadBytesExt, WriteBytesExt};
use flutter_rust_bridge::for_generated::{transform_result_dco, Lifetimeable, Lockable};
use flutter_rust_bridge::{Handler, IntoIntoDart};

// Section: boilerplate

flutter_rust_bridge::frb_generated_boilerplate_io!();

// Section: dart2rust

impl CstDecode<flutter_rust_bridge::for_generated::anyhow::Error>
    for *mut wire_cst_list_prim_u_8_strict
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> flutter_rust_bridge::for_generated::anyhow::Error {
        unimplemented!()
    }
}
impl CstDecode<AutoDeleveraging> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> AutoDeleveraging {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AutoDeleveraging>,
            >,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<ChangePubKey> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> ChangePubKey {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChangePubKey>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<Contract> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Contract {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Contract>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<ContractMatching> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> ContractMatching {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<
                flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ContractMatching>,
            >,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<ContractPrice> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> ContractPrice {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ContractPrice>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<EthTxOption> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> EthTxOption {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<EthTxOption>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<ForcedExit> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> ForcedExit {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ForcedExit>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<Funding> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Funding {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Funding>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<FundingInfo> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> FundingInfo {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<FundingInfo>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<Liquidation> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Liquidation {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Liquidation>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<Order> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Order {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Order>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<OrderMatching> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> OrderMatching {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<OrderMatching>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<Parameter> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Parameter {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Parameter>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<Signer> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Signer {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Signer>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<SpotPriceInfo> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> SpotPriceInfo {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<SpotPriceInfo>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<Transfer> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Transfer {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Transfer>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<UpdateGlobalVar> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> UpdateGlobalVar {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UpdateGlobalVar>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<Wallet> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Wallet {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Wallet>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<Withdraw> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Withdraw {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Withdraw>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<ZkLinkSignature> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> ZkLinkSignature {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ZkLinkSignature>>,
        >::cst_decode(
            self
        ))
    }
}
impl CstDecode<ZkLinkSigner> for usize {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> ZkLinkSigner {
        flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(CstDecode::<
            RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ZkLinkSigner>>,
        >::cst_decode(
            self
        ))
    }
}
impl
    CstDecode<
        RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AutoDeleveraging>>,
    > for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AutoDeleveraging>>
    {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChangePubKey>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChangePubKey>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Contract>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Contract>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ContractMatching>>,
    > for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ContractMatching>>
    {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl
    CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ContractPrice>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ContractPrice>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<EthTxOption>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<EthTxOption>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ForcedExit>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ForcedExit>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Funding>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Funding>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<FundingInfo>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<FundingInfo>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Liquidation>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Liquidation>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Order>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Order>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl
    CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<OrderMatching>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<OrderMatching>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Parameter>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Parameter>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Signer>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Signer>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl
    CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<SpotPriceInfo>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<SpotPriceInfo>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Transfer>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Transfer>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UpdateGlobalVar>>,
    > for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UpdateGlobalVar>>
    {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Wallet>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Wallet>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Withdraw>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Withdraw>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl
    CstDecode<
        RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ZkLinkSignature>>,
    > for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ZkLinkSignature>>
    {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ZkLinkSigner>>>
    for usize
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(
        self,
    ) -> RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ZkLinkSigner>> {
        unsafe { decode_rust_opaque_nom(self as _) }
    }
}
impl CstDecode<String> for *mut wire_cst_list_prim_u_8_strict {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> String {
        let vec: Vec<u8> = self.cst_decode();
        String::from_utf8(vec).unwrap()
    }
}
impl CstDecode<f64> for *mut f64 {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> f64 {
        unsafe { *flutter_rust_bridge::for_generated::box_from_leak_ptr(self) }
    }
}
impl CstDecode<u32> for *mut u32 {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> u32 {
        unsafe { *flutter_rust_bridge::for_generated::box_from_leak_ptr(self) }
    }
}
impl CstDecode<Vec<Contract>> for *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContract {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> Vec<Contract> {
                let vec = unsafe {
        let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
        flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
    };
    vec.into_iter().map(CstDecode::cst_decode).collect()
            }
        }
impl CstDecode<Vec<ContractPrice>> for *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractPrice {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> Vec<ContractPrice> {
                let vec = unsafe {
        let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
        flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
    };
    vec.into_iter().map(CstDecode::cst_decode).collect()
            }
        }
impl CstDecode<Vec<FundingInfo>> for *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFundingInfo {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> Vec<FundingInfo> {
                let vec = unsafe {
        let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
        flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
    };
    vec.into_iter().map(CstDecode::cst_decode).collect()
            }
        }
impl CstDecode<Vec<SpotPriceInfo>> for *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSpotPriceInfo {
            // Codec=Cst (C-struct based), see doc to use other codecs
            fn cst_decode(self) -> Vec<SpotPriceInfo> {
                let vec = unsafe {
        let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
        flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
    };
    vec.into_iter().map(CstDecode::cst_decode).collect()
            }
        }
impl CstDecode<Vec<u32>> for *mut wire_cst_list_prim_u_32_loose {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u32> {
        unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        }
    }
}
impl CstDecode<Vec<u32>> for *mut wire_cst_list_prim_u_32_strict {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u32> {
        unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        }
    }
}
impl CstDecode<Vec<u8>> for *mut wire_cst_list_prim_u_8_loose {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u8> {
        unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        }
    }
}
impl CstDecode<Vec<u8>> for *mut wire_cst_list_prim_u_8_strict {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u8> {
        unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        }
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__AutoDeleveraging_new(
    account_id: u32,
    sub_account_id: u8,
    sub_account_nonce: u32,
    contract_prices: *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractPrice,
    margin_prices: *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSpotPriceInfo,
    adl_account_id: u32,
    pair_id: u16,
    adl_size: *mut wire_cst_list_prim_u_8_strict,
    adl_price: *mut wire_cst_list_prim_u_8_strict,
    fee: *mut wire_cst_list_prim_u_8_strict,
    fee_token: u16,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__AutoDeleveraging_new_impl(
        account_id,
        sub_account_id,
        sub_account_nonce,
        contract_prices,
        margin_prices,
        adl_account_id,
        pair_id,
        adl_size,
        adl_price,
        fee,
        fee_token,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__AutoDeleveraging_sign(
    that: usize,
    zk_link_signer: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__AutoDeleveraging_sign_impl(that, zk_link_signer)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__AutoDeleveraging_to_json(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__AutoDeleveraging_to_json_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ChangePubKey_get_eth_sign_msg(
    that: usize,
    nonce: u32,
    account_id: u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ChangePubKey_get_eth_sign_msg_impl(that, nonce, account_id)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ChangePubKey_new(
    chain_id: u8,
    account_id: u32,
    sub_account_id: u8,
    new_pubkey_hash: *mut wire_cst_list_prim_u_8_strict,
    fee_token: u32,
    fee: *mut wire_cst_list_prim_u_8_strict,
    nonce: u32,
    eth_signature: *mut wire_cst_list_prim_u_8_strict,
    ts: *mut u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ChangePubKey_new_impl(
        chain_id,
        account_id,
        sub_account_id,
        new_pubkey_hash,
        fee_token,
        fee,
        nonce,
        eth_signature,
        ts,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ChangePubKey_set_eth_auth_data(
    that: usize,
    sig: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ChangePubKey_set_eth_auth_data_impl(that, sig)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ChangePubKey_sign(
    that: usize,
    zk_link_signer: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ChangePubKey_sign_impl(that, zk_link_signer)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ChangePubKey_to_eip712_request_payload(
    that: usize,
    chain_id: u32,
    address: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ChangePubKey_to_eip712_request_payload_impl(that, chain_id, address)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ChangePubKey_to_json(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ChangePubKey_to_json_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ContractMatching_new(
    account_id: u32,
    sub_account_id: u8,
    taker: usize,
    maker: *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContract,
    fee: *mut wire_cst_list_prim_u_8_strict,
    fee_token: u16,
    contract_prices: *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractPrice,
    margin_prices: *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSpotPriceInfo,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ContractMatching_new_impl(
        account_id,
        sub_account_id,
        taker,
        maker,
        fee,
        fee_token,
        contract_prices,
        margin_prices,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ContractMatching_sign(
    that: usize,
    zk_link_signer: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ContractMatching_sign_impl(that, zk_link_signer)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ContractMatching_to_json(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ContractMatching_to_json_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ContractPrice_new(
    pair_id: u16,
    market_price: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ContractPrice_new_impl(pair_id, market_price)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Contract_new(
    account_id: u32,
    sub_account_id: u8,
    slot_id: u32,
    nonce: u32,
    pair_id: u16,
    size: *mut wire_cst_list_prim_u_8_strict,
    price: *mut wire_cst_list_prim_u_8_strict,
    direction: bool,
    maker_fee_rate: u8,
    taker_fee_rate: u8,
    has_subsidy: bool,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Contract_new_impl(
        account_id,
        sub_account_id,
        slot_id,
        nonce,
        pair_id,
        size,
        price,
        direction,
        maker_fee_rate,
        taker_fee_rate,
        has_subsidy,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Contract_sign(
    that: usize,
    zk_link_signer: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Contract_sign_impl(that, zk_link_signer)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Contract_to_json(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Contract_to_json_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__EthTxOption_new(
    is_support_eip1559: bool,
    to: *mut wire_cst_list_prim_u_8_strict,
    nonce: *mut f64,
    value: *mut wire_cst_list_prim_u_8_strict,
    gas: *mut f64,
    gas_price: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__EthTxOption_new_impl(is_support_eip1559, to, nonce, value, gas, gas_price)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ForcedExit_new(
    to_chain_id: u8,
    initiator_account_id: u32,
    initiator_sub_account_id: u8,
    target_sub_account_id: u8,
    target: *mut wire_cst_list_prim_u_8_strict,
    l2_source_token: u32,
    l1_target_token: u32,
    exit_amount: *mut wire_cst_list_prim_u_8_strict,
    initiator_nonce: u32,
    withdraw_to_l1: bool,
    ts: *mut u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ForcedExit_new_impl(
        to_chain_id,
        initiator_account_id,
        initiator_sub_account_id,
        target_sub_account_id,
        target,
        l2_source_token,
        l1_target_token,
        exit_amount,
        initiator_nonce,
        withdraw_to_l1,
        ts,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ForcedExit_sign(
    that: usize,
    zk_link_signer: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ForcedExit_sign_impl(that, zk_link_signer)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ForcedExit_to_json(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ForcedExit_to_json_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__FundingInfo_new(
    pair_id: u16,
    price: *mut wire_cst_list_prim_u_8_strict,
    funding_rate: i16,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__FundingInfo_new_impl(pair_id, price, funding_rate)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Funding_new(
    account_id: u32,
    sub_account_id: u8,
    sub_account_nonce: u32,
    funding_account_ids: *mut wire_cst_list_prim_u_32_loose,
    fee: *mut wire_cst_list_prim_u_8_strict,
    fee_token: u16,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Funding_new_impl(
        account_id,
        sub_account_id,
        sub_account_nonce,
        funding_account_ids,
        fee,
        fee_token,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Funding_sign(
    that: usize,
    zk_link_signer: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Funding_sign_impl(that, zk_link_signer)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Funding_to_json(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Funding_to_json_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Liquidation_new(
    account_id: u32,
    sub_account_id: u8,
    sub_account_nonce: u32,
    contract_prices: *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractPrice,
    margin_prices: *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSpotPriceInfo,
    liquidation_account_id: u32,
    fee: *mut wire_cst_list_prim_u_8_strict,
    fee_token: u16,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Liquidation_new_impl(
        account_id,
        sub_account_id,
        sub_account_nonce,
        contract_prices,
        margin_prices,
        liquidation_account_id,
        fee,
        fee_token,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Liquidation_sign(
    that: usize,
    zk_link_signer: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Liquidation_sign_impl(that, zk_link_signer)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Liquidation_to_json(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Liquidation_to_json_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__OrderMatching_new(
    account_id: u32,
    sub_account_id: u8,
    taker: usize,
    maker: usize,
    fee: *mut wire_cst_list_prim_u_8_strict,
    fee_token: u32,
    contract_prices: *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractPrice,
    margin_prices: *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSpotPriceInfo,
    expect_base_amount: *mut wire_cst_list_prim_u_8_strict,
    expect_quote_amount: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__OrderMatching_new_impl(
        account_id,
        sub_account_id,
        taker,
        maker,
        fee,
        fee_token,
        contract_prices,
        margin_prices,
        expect_base_amount,
        expect_quote_amount,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__OrderMatching_sign(
    that: usize,
    zk_link_signer: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__OrderMatching_sign_impl(that, zk_link_signer)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__OrderMatching_to_json(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__OrderMatching_to_json_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Order_new(
    account_id: u32,
    sub_account_id: u8,
    slot_id: u32,
    nonce: u32,
    base_token_id: u32,
    quote_token_id: u32,
    amount: *mut wire_cst_list_prim_u_8_strict,
    price: *mut wire_cst_list_prim_u_8_strict,
    is_sell: bool,
    maker_fee_rate: u8,
    taker_fee_rate: u8,
    has_subsidy: bool,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Order_new_impl(
        account_id,
        sub_account_id,
        slot_id,
        nonce,
        base_token_id,
        quote_token_id,
        amount,
        price,
        is_sell,
        maker_fee_rate,
        taker_fee_rate,
        has_subsidy,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Order_sign(
    that: usize,
    zk_link_signer: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Order_sign_impl(that, zk_link_signer)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Order_to_json(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Order_to_json_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Parameter_contract_info(
    pair_id: u16,
    symbol: *mut wire_cst_list_prim_u_8_strict,
    initial_margin_rate: u16,
    maintenance_margin_rate: u16,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Parameter_contract_info_impl(
        pair_id,
        symbol,
        initial_margin_rate,
        maintenance_margin_rate,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Parameter_fee_account(
    account_id: u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Parameter_fee_account_impl(account_id)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Parameter_funding_infos(
    infos: *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFundingInfo,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Parameter_funding_infos_impl(infos)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Parameter_insurance_fund_account(
    account_id: u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Parameter_insurance_fund_account_impl(account_id)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Parameter_margin_info(
    margin_id: u8,
    symbol: *mut wire_cst_list_prim_u_8_strict,
    token_id: u32,
    ratio: u8,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Parameter_margin_info_impl(margin_id, symbol, token_id, ratio)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_create_signed_contract(
    that: usize,
    contract: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_create_signed_contract_impl(that, contract)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_create_signed_order(
    that: usize,
    order: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_create_signed_order_impl(that, order)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_eth_signer(
    eth_private_key: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_eth_signer_impl(eth_private_key)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_sign_auto_deleveraging(
    that: usize,
    tx: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_sign_auto_deleveraging_impl(that, tx)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_sign_change_pubkey_with_create2data_auth(
    that: usize,
    tx: usize,
    creator_address: *mut wire_cst_list_prim_u_8_strict,
    salt_arg: *mut wire_cst_list_prim_u_8_strict,
    code_hash: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_sign_change_pubkey_with_create2data_auth_impl(
        that,
        tx,
        creator_address,
        salt_arg,
        code_hash,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_sign_change_pubkey_with_eth_ecdsa_auth(
    that: usize,
    tx: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_sign_change_pubkey_with_eth_ecdsa_auth_impl(that, tx)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_sign_change_pubkey_with_onchain(
    that: usize,
    tx: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_sign_change_pubkey_with_onchain_impl(that, tx)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_sign_contract_matching(
    that: usize,
    tx: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_sign_contract_matching_impl(that, tx)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_sign_forced_exit(
    that: usize,
    tx: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_sign_forced_exit_impl(that, tx)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_sign_funding(
    that: usize,
    tx: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_sign_funding_impl(that, tx)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_sign_liquidation(
    that: usize,
    tx: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_sign_liquidation_impl(that, tx)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_sign_order_matching(
    that: usize,
    tx: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_sign_order_matching_impl(that, tx)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_sign_transfer(
    that: usize,
    tx: usize,
    token_symbol: *mut wire_cst_list_prim_u_8_strict,
    chain_id: *mut wire_cst_list_prim_u_8_strict,
    addr: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_sign_transfer_impl(that, tx, token_symbol, chain_id, addr)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_sign_withdraw(
    that: usize,
    tx: usize,
    token_symbol: *mut wire_cst_list_prim_u_8_strict,
    chain_id: *mut wire_cst_list_prim_u_8_strict,
    addr: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_sign_withdraw_impl(that, tx, token_symbol, chain_id, addr)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Signer_starknet_signer(
    eth_private_key: *mut wire_cst_list_prim_u_8_strict,
    starknet_chain_id: *mut wire_cst_list_prim_u_8_strict,
    starknet_addr: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Signer_starknet_signer_impl(eth_private_key, starknet_chain_id, starknet_addr)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__SpotPriceInfo_new(
    token_id: u32,
    price: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__SpotPriceInfo_new_impl(token_id, price)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Transfer_get_eth_sign_msg(
    that: usize,
    token_symbol: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Transfer_get_eth_sign_msg_impl(that, token_symbol)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Transfer_new(
    account_id: u32,
    to_address: *mut wire_cst_list_prim_u_8_strict,
    from_sub_account_id: u8,
    to_sub_account_id: u8,
    token: u32,
    fee: *mut wire_cst_list_prim_u_8_strict,
    amount: *mut wire_cst_list_prim_u_8_strict,
    nonce: u32,
    ts: *mut u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Transfer_new_impl(
        account_id,
        to_address,
        from_sub_account_id,
        to_sub_account_id,
        token,
        fee,
        amount,
        nonce,
        ts,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Transfer_sign(
    that: usize,
    zk_link_signer: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Transfer_sign_impl(that, zk_link_signer)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Transfer_to_json(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Transfer_to_json_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__UpdateGlobalVar_new(
    from_chain_id: u8,
    sub_account_id: u8,
    parameter: usize,
    serial_id: f64,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__UpdateGlobalVar_new_impl(from_chain_id, sub_account_id, parameter, serial_id)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__UpdateGlobalVar_to_json(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__UpdateGlobalVar_to_json_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Wallet_approve_erc20(
    port_: i64,
    that: usize,
    contract: *mut wire_cst_list_prim_u_8_strict,
    amount: *mut wire_cst_list_prim_u_8_strict,
    eth_params: usize,
) {
    wire__crate__api__Wallet_approve_erc20_impl(port_, that, contract, amount, eth_params)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Wallet_deposit_erc20(
    port_: i64,
    that: usize,
    sub_account_id: u8,
    deposit_to: *mut wire_cst_list_prim_u_8_strict,
    token_addr: *mut wire_cst_list_prim_u_8_strict,
    amount: *mut wire_cst_list_prim_u_8_strict,
    mapping: bool,
    eth_params: usize,
    is_gateway: bool,
) {
    wire__crate__api__Wallet_deposit_erc20_impl(
        port_,
        that,
        sub_account_id,
        deposit_to,
        token_addr,
        amount,
        mapping,
        eth_params,
        is_gateway,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Wallet_deposit_eth(
    port_: i64,
    that: usize,
    sub_account_id: u8,
    deposit_to: *mut wire_cst_list_prim_u_8_strict,
    eth_params: usize,
    is_gateway: bool,
) {
    wire__crate__api__Wallet_deposit_eth_impl(
        port_,
        that,
        sub_account_id,
        deposit_to,
        eth_params,
        is_gateway,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Wallet_full_exit(
    port_: i64,
    that: usize,
    account_id: u32,
    sub_account_id: u8,
    token_id: u16,
    mapping: bool,
    eth_params: usize,
) {
    wire__crate__api__Wallet_full_exit_impl(
        port_,
        that,
        account_id,
        sub_account_id,
        token_id,
        mapping,
        eth_params,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Wallet_get_balance(port_: i64, that: usize) {
    wire__crate__api__Wallet_get_balance_impl(port_, that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Wallet_get_deposit_fee(
    port_: i64,
    that: usize,
    eth_params: usize,
) {
    wire__crate__api__Wallet_get_deposit_fee_impl(port_, that, eth_params)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Wallet_get_nonce(
    port_: i64,
    that: usize,
    block_number: *mut wire_cst_list_prim_u_8_strict,
) {
    wire__crate__api__Wallet_get_nonce_impl(port_, that, block_number)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Wallet_new(
    url: *mut wire_cst_list_prim_u_8_strict,
    private_key: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Wallet_new_impl(url, private_key)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Wallet_set_auth_pubkey_hash(
    port_: i64,
    that: usize,
    nonce: f64,
    new_pubkey_hash: *mut wire_cst_list_prim_u_8_strict,
    eth_params: usize,
) {
    wire__crate__api__Wallet_set_auth_pubkey_hash_impl(
        port_,
        that,
        nonce,
        new_pubkey_hash,
        eth_params,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Wallet_wait_for_transaction(
    port_: i64,
    that: usize,
    tx_hash: *mut wire_cst_list_prim_u_8_strict,
    timeout: *mut u32,
) {
    wire__crate__api__Wallet_wait_for_transaction_impl(port_, that, tx_hash, timeout)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Withdraw_get_eth_sign_msg(
    that: usize,
    token_symbol: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Withdraw_get_eth_sign_msg_impl(that, token_symbol)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Withdraw_new(
    account_id: u32,
    sub_account_id: u8,
    to_chain_id: u8,
    to_address: *mut wire_cst_list_prim_u_8_strict,
    l2_source_token: u32,
    l1_target_token: u32,
    amount: *mut wire_cst_list_prim_u_8_strict,
    call_data: *mut wire_cst_list_prim_u_8_strict,
    fee: *mut wire_cst_list_prim_u_8_strict,
    nonce: u32,
    withdraw_to_l1: bool,
    withdraw_fee_ratio: u16,
    ts: *mut u32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Withdraw_new_impl(
        account_id,
        sub_account_id,
        to_chain_id,
        to_address,
        l2_source_token,
        l1_target_token,
        amount,
        call_data,
        fee,
        nonce,
        withdraw_to_l1,
        withdraw_fee_ratio,
        ts,
    )
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Withdraw_sign(
    that: usize,
    zk_link_signer: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Withdraw_sign_impl(that, zk_link_signer)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__Withdraw_to_json(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__Withdraw_to_json_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ZkLinkSignature_get_pubkey(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ZkLinkSignature_get_pubkey_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ZkLinkSignature_get_signature(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ZkLinkSignature_get_signature_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ZkLinkSigner_eth_sig(
    sig: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ZkLinkSigner_eth_sig_impl(sig)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ZkLinkSigner_get_pubkey(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ZkLinkSigner_get_pubkey_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ZkLinkSigner_get_pubkey_hash(
    that: usize,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ZkLinkSigner_get_pubkey_hash_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ZkLinkSigner_sign_musig(
    that: usize,
    msg: *mut wire_cst_list_prim_u_8_loose,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ZkLinkSigner_sign_musig_impl(that, msg)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__ZkLinkSigner_starknet_sig(
    sig: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__ZkLinkSigner_starknet_sig_impl(sig)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__closest_packable_fee_amount(
    fee: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__closest_packable_fee_amount_impl(fee)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__closest_packable_token_amount(
    amount: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__closest_packable_token_amount_impl(amount)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__init_app(port_: i64) {
    wire__crate__api__init_app_impl(port_)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__is_fee_amount_packable(
    fee: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__is_fee_amount_packable_impl(fee)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_wire__crate__api__is_token_amount_packable(
    amount: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire__crate__api__is_token_amount_packable_impl(amount)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAutoDeleveraging(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AutoDeleveraging>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAutoDeleveraging(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AutoDeleveraging>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChangePubKey(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChangePubKey>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChangePubKey(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChangePubKey>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContract(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Contract>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContract(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Contract>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractMatching(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ContractMatching>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractMatching(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ContractMatching>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractPrice(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ContractPrice>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractPrice(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ContractPrice>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEthTxOption(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<EthTxOption>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEthTxOption(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<EthTxOption>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerForcedExit(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ForcedExit>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerForcedExit(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ForcedExit>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFunding(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Funding>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFunding(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Funding>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFundingInfo(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<FundingInfo>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFundingInfo(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<FundingInfo>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiquidation(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Liquidation>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiquidation(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Liquidation>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrder(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Order>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrder(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Order>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrderMatching(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<OrderMatching>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrderMatching(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<OrderMatching>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParameter(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Parameter>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParameter(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Parameter>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSigner(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Signer>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSigner(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Signer>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSpotPriceInfo(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<SpotPriceInfo>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSpotPriceInfo(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<SpotPriceInfo>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerTransfer(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Transfer>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerTransfer(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Transfer>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateGlobalVar(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UpdateGlobalVar>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateGlobalVar(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UpdateGlobalVar>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerWallet(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Wallet>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerWallet(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Wallet>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerWithdraw(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Withdraw>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerWithdraw(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Withdraw>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerZkLinkSignature(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ZkLinkSignature>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerZkLinkSignature(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ZkLinkSignature>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerZkLinkSigner(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ZkLinkSigner>>::increment_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerZkLinkSigner(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        StdArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ZkLinkSigner>>::decrement_strong_count(ptr as _);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_cst_new_box_autoadd_f_64(value: f64) -> *mut f64 {
    flutter_rust_bridge::for_generated::new_leak_box_ptr(value)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_cst_new_box_autoadd_u_32(value: u32) -> *mut u32 {
    flutter_rust_bridge::for_generated::new_leak_box_ptr(value)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContract(len: i32) -> *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContract{
    let wrap = wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContract { ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len), len };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractPrice(len: i32) -> *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractPrice{
    let wrap = wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractPrice { ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len), len };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFundingInfo(len: i32) -> *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFundingInfo{
    let wrap = wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFundingInfo { ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len), len };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_cst_new_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSpotPriceInfo(len: i32) -> *mut wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSpotPriceInfo{
    let wrap = wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSpotPriceInfo { ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len), len };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_cst_new_list_prim_u_32_loose(
    len: i32,
) -> *mut wire_cst_list_prim_u_32_loose {
    let ans = wire_cst_list_prim_u_32_loose {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(ans)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_cst_new_list_prim_u_32_strict(
    len: i32,
) -> *mut wire_cst_list_prim_u_32_strict {
    let ans = wire_cst_list_prim_u_32_strict {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(ans)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_cst_new_list_prim_u_8_loose(
    len: i32,
) -> *mut wire_cst_list_prim_u_8_loose {
    let ans = wire_cst_list_prim_u_8_loose {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(ans)
}

#[no_mangle]
pub extern "C" fn frbgen_zklink_cst_new_list_prim_u_8_strict(
    len: i32,
) -> *mut wire_cst_list_prim_u_8_strict {
    let ans = wire_cst_list_prim_u_8_strict {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(ans)
}

#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContract
{
    ptr: *mut usize,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerContractPrice
{
    ptr: *mut usize,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFundingInfo
{
    ptr: *mut usize,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSpotPriceInfo
{
    ptr: *mut usize,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_prim_u_32_loose {
    ptr: *mut u32,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_prim_u_32_strict {
    ptr: *mut u32,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_prim_u_8_loose {
    ptr: *mut u8,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_prim_u_8_strict {
    ptr: *mut u8,
    len: i32,
}
